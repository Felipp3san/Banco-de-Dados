-- Comandos úteis mysql
sudo apt install mysql-server
sudo mysql -u root -p // acessar mysql via terminal
CTRL + L // limpar tela
status // mostra a database em uso e outras informações úteis

-- Comandos úteis para se conectar ao servidor Ubuntu
sudo apt install openssh-server  // instalar openssh
sudo services ssh status   // status servidor ssh
ip addr  // visualizar ip maquina
sudo nano /etc/ssh/sshd_config  // config ssh
sudo service ssh stop  // para o servidor ssh
sudo service ssh start  // inicia o servidor ssh 
ssh <usuario-ubuntu>@<endereço-ip> -p <porta (padrão 22)> // acessar servidor ssh (password do ubuntu) 

-- MYSQL

EMPTY SET -- set de dados vazio

-- Tipos de dados

VARCHAR - Dinâmico. Ocupa apenas os bytes necessários para a quantidade de chars inserido
CHAR - Não dinâmico. Ocupa a quantidade de bytes total da quantidade de posições especificadadas
ENUM - Constraint. Úsuário escolhe a opção desejada sem digitar. Os dados que entraram não sairão do conjunto definido.
FLOAT - Ex: float(10,2), 10 números totais com 2 deles estando após a vírgula. Números com virgula flutuante.
INT - Limite de 11 digitos (Não esquecer o range). Números inteiros.

/* Modelagem Básica */
/* Entidade = Tabela
   Campo = Atributo */

CLIENTE

NOME - CARACTER(30)
CPF - NUMERICO(11)
EMAIL - CARACTER(30)
TELEFONE - CARACTER(30)
ENDERECO - CARACTER(30)
SEXO - CARACTER(1)

/* PROCESSOS DE MODELAGEM */

-- FASE 01 E FASE 02 - AD ADM DE DADOS

MODELAGEM CONCEITUAL - RASCUNHO
MODELAGEM LÓGICA - QUALQUER PROGRAMA DE MODELAGEM

-- FASE 03 - DBA / AD

MODELAGEM FÍSICA - SCRIPTS DE BANCO

/* INICIANDO A MODELAGEM FÍSICA */

-- CRIANDO O BANCO DE DADOS

CREATE DATABASE PROJETO; /* NÃO ESQUECER PONTO E VIRGULA */

-- CONECTANDO-SE AO BANCO

USE PROJETO;

-- CRIANDO A TABELA DE CLIENTES

CREATE TABLE CLIENTE (
    NOME VARCHAR(30),
    SEXO CHAR(1),
    EMAIL VARCHAR(30),
    CPF INT(11),
    TELEFONE VARCHAR(30),
    ENDERECO VARCHAR(100)
);

-- VERIFICANDO AS TABELAS DO BANCO 

SHOW TABLES;  -- SÓ EXISTE EM MYSQL

-- DESCOBRINDO COMO É A ESTRUTURA DE UMA TABELA

DESC CLIENTE;

/* SINTAXE BÁSICA DE INSERÇÃO */

INSERT INTO...

-- FORMA 01 - OMITINDO AS COLUNAS
-- VALORES DEVEM VIR NA LINHA DE COMANDO NA MESMA ORDEM DAS COLUNAS

INSERT INTO CLIENTE VALUES('JOAO', 'M', 'JOAO@GMAIL.COM', 988638273, '22923110', 'MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ');

INSERT INTO CLIENTE VALUES('CELIA', 'F', 'CELIA@GMAIL.COM', 541521456, '25078869', 'RIACHUELO - CENTRO - RIO DE JANEIRO- RJ' );

INSERT INTO CLIENTE VALUES('JORGE', 'M', NULL, 885755896, '58748895', 'OSCAR CURY - BOM RETIRO - PATOS DE MINAS - MG');

-- FORMA 02 - COLOCANDO AS COLUNAS

INSERT INTO CLIENTE(NOME, SEXO, ENDERECO, TELEFONE, CPF) VALUES('LILIAN', 'F', 'SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ', '947785696', 887774856);

-- FORMA 03 - INSERT COMPACTO - SOMENTE MYSQL 

INSERT INTO CLIENTE VALUES('ANA', 'F', 'ANA@GLOBO.COM', 85548962, '548556985', 'PRES ANTONIO CARLOS - CENTRO - SAO PAULO - SP'),
                          ('CARLA','F', 'CARLA@TERATI.COM.BR', 7745828, '66587458', 'SAMUEL SILVA - CENTRO - BELO HORIZONTE - MG');

/* O COMANDO SELECT */
-- PROJEÇÃO
-- PROJETA TABELAS QUE EXISTEM E QUE NÃO EXISTEM

SELECT NOW(); -- PROJETA TABELA COM DATA E HORA
SELECT NOW() AS DATA_HORA; -- UTILIZANDO ALIAS

SELECT 'FELIPPE'; -- PROJETA TABELA COM MEU NOME
SELECT NOW() AS DATA_HORA, 'FELIPPE' AS ALUNO; -- PROJETA TABELA COM COLUNAS DATA HORA E MEU NOME

SELECT 'BANCO DE DADOS'; -- PROJETA TABELA COM PALAVRA BANCO DE DADOS

/* ALIAS DE COLUNAS */

SELECT NOME, SEXO, EMAIL FROM CLIENTE;
SELECT NOME AS CLIENTE, SEXO, EMAIL FROM CLIENTE; -- COM ALIAS
SELECT NOME, SEXO, EMAIL, ENDERECO FROM CLIENTE; -- ALTERANDO A ORDEM
SELECT NOME, SEXO, CPF, NOW() AS DATA_HORA FROM CLIENTE; -- COM DATA E HORA DE QUANDO FOI CRIADA A PROJEÇÃO

/* SOMENTE PARA FINS ACADEMICOS */

SELECT * FROM CLIENTE;

/* FILTRANDO DADOS COM WHERE E LIKE */

SELECT NOME, SEXO FROM CLIENTE WHERE SEXO = 'M';

SELECT NOME, ENDERECO FROM CLIENTE WHERE SEXO = 'F';

SELECT NOME, SEXO FROM CLIENTE WHERE ENDERECO = 'RJ';

/* UTILIZANDO O LIKE */
-- Substitui a igualdade
-- Degrada performance, preferivel utilizar igualdade.

SELECT NOME, SEXO FROM CLIENTE WHERE ENDERECO LIKE 'RJ';
-- Não funciona. Falta caracter coringa.

/* CARACTER CORINGA (%) -> QUALQUER COISA */

SELECT NOME, SEXO FROM CLIENTE WHERE ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE ENDERECO LIKE 'OSCAR CURY%';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE ENDERECO LIKE '%CENTRO%';

/* EXERCICIO DE FIXAÇÃO 1 */

BANCO: LIVRARIA

TABELA: LIVROS

ATRIBUTOS:
    NOME DO LIVRO
    NOME DO AUTOR
    SEXO DO AUTOR
    NUMERO DE PÁGINAS
    NOME DA EDITORA
    VALOR DO LIVRO
    ESTADO(UF) DA EDITORA
    ANO PUBLICACAO

-- SCRIPT

CREATE DATABASE LIVRARIA;

USE LIVRARIA;

CREATE TABLE LIVROS (
    NOME_LIVRO VARCHAR(50),
    NOME_AUTOR VARCHAR(50),
    SEXO_AUTOR VARCHAR(9),
    NUMERO_PAGINAS INT(3),
    NOME_EDITORA VARCHAR(50),
    VALOR_LIVRO FLOAT(5,2),
    UF_EDITORA CHAR(2),
    ANO_PUBLICACAO INT(4)
);

INSERT INTO LIVROS(NOME_LIVRO, NOME_AUTOR, SEXO_AUTOR, NUMERO_PAGINAS, NOME_EDITORA, VALOR_LIVRO, UF_EDITORA, ANO_PUBLICACAO)
VALUES ('Cavaleiro Real', 'Ana Claudia', 'Feminino', 465, 'Atlas', 49.9,	'RJ', 2009);

INSERT INTO LIVROS(NOME_LIVRO, NOME_AUTOR, SEXO_AUTOR, NUMERO_PAGINAS, NOME_EDITORA, VALOR_LIVRO, UF_EDITORA, ANO_PUBLICACAO)
VALUES ('SQL Para Leigos', 'João Nunes', 'Masculino', 450, 'Addison', 98, 'SP', 2018);

INSERT INTO LIVROS(NOME_LIVRO, NOME_AUTOR, SEXO_AUTOR, NUMERO_PAGINAS, NOME_EDITORA, VALOR_LIVRO, UF_EDITORA, ANO_PUBLICACAO)
VALUES ('Receitas Caseiras', 'Celia Tavares', 'Feminino', 210, 'Atlas', 45, 'RJ', 2008);

INSERT INTO LIVROS(NOME_LIVRO, NOME_AUTOR, SEXO_AUTOR, NUMERO_PAGINAS, NOME_EDITORA, VALOR_LIVRO, UF_EDITORA, ANO_PUBLICACAO)
VALUES ('Pessoas Efetivas', 'Eduardo Santos', 'Masculino', 390, 'Beta', 78.99, 'RJ', 2018);

-- TRAZER TODOS OS DADOS

SELECT * 
FROM LIVROS;

-- TRAZER NOME DO LIVRO E NOME DA EDITORA

SELECT NOME_LIVRO, NOME_EDITORA 
FROM LIVROS;

-- TRAZER O NOME DO LIVRO E A UF DOS LIVROS PUBLICADOS POR AUTORES DO SEXO MASCULINO

SELECT NOME_LIVRO, UF_EDITORA 
FROM LIVROS 
WHERE SEXO_AUTOR = 'Masculino';

-- TRAZER O NOME DO LIVRO E O NUMERO DO PAGINAS DOS LIVROS PUBLICADOS POR AUTORES DO SEXO FEMININO

SELECT NOME_LIVRO, NUMERO_PAGINAS 
FROM LIVROS 
WHERE SEXO_AUTOR = 'Feminino';

-- TRAZER OS VALORES DOS LIVROS DAS EDITORAS DE SÃO PAULO

SELECT VALOR_LIVRO 
FROM LIVROS 
WHERE UF_EDITORA = 'SP';

-- TRAZER OS DADOS DOS AUTORES DO SEXO MASCULINO QUE TIVERAM LIVROS PUBLICADOS POR SÃO PAULO OU RIO DE JANEIRO

SELECT NOME_AUTOR, SEXO_AUTOR 
FROM LIVROS 
WHERE SEXO_AUTOR = 'Masculino' AND (UF_EDITORA = 'RJ' OR UF_EDITORA = 'SP');

/* FIM DO EXERCICIO */

/* OPERADORES LÓGICOS */

OR -> PARA QUE A SAÍDA DA QUERY SEJA VERDADEIRA, BASTA QUE APENAS UMA CONDIÇÃO SEJA VERDADEIRA
AND -> PARA QUE A SAÍDA SEJA VERDADEIRA, TODAS AS CONDIÇÕES PRECISAM SER VERDADEIRAS.

/* OR - OU */

SHOW DATABASES;

USE PROJETO;

SELECT * FROM CLIENTE;

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE SEXO = 'M' OR ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE SEXO = 'F' OR ENDERECO LIKE '%ESTACIO%';

/* AND - E */

SHOW DATABASES;

USE PROJETO;

SELECT * FROM CLIENTE;

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE SEXO = 'M' AND ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE SEXO = 'F' AND ENDERECO LIKE '%ESTACIO%';

/* COUNT(*), GROUP BY, PERFORMANCE COM OPERADORES LOGICOS */

/* CONTANDO OS REGISTROS DE UMA TABELA */

SELECT COUNT(*) AS "Quantidade de Registros da Tab. Cliente" FROM CLIENTE;

/* OPERADOR GROUP BY */

SELECT SEXO, COUNT(*) FROM CLIENTE;  -- Não funcionou

SELECT SEXO, COUNT(*) FROM CLIENTE GROUP BY SEXO;   -- GROUP BY distribuiu a contagem de clientes para os tipos de sexo

/* PERFORMANCE EM OPERADORES LÓGICOS */

1 MILHAO DE REGISTROS

-- PARA CONTAR
SELECT COUNT(*) FROM CLIENTE;

SELECT SEXO, COUNT(*) FROM CLIENTE GROUP BY SEXO;

SELECT SEXO, COUNT(*) FROM CLIENTE GROUP BY CIDADE;

-- CONDICAO
SEXO = F
CIDADE = RIO DE JANEIRO

-- SITUAÇÃO - TRATANDO COM OU / OR
70% MULHERES = SEXO F
30% MORA NO RIO DE JANEIRO

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE SEXO = 'F' OR CIDADE = 'RIO DE JANEIRO';

-- UTILIZANDO O OR, A CONDIÇÃO QUE POSSUI MAIS INCIDENCIA NA TABELA DEVE ESTAR EM PRIMEIRO, NO CASO, SEXO = F
-- ISSO PORQUE APENAS UMA DAS CONDIÇÕES PRECISA SER VERDADEIRA

-- SITUAÇÃO - TRATANDO COM E / AND
70% MULHERES = SEXO F
30% MORA NO RIO DE JANEIRO

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE CIDADE = 'RIO DE JANEIRO' OR SEXO = 'F';

-- UTILIZANDO O AND, A CONDIÇÃO COM MENOS INCIDENCIA NA TABELA DEVE ESTAR EM PRIMEIRO, NO CASO, CIDADE = 'RIO DE JANEIRO'
-- ISSO PORQUE AS DUAS CONDIÇÕES TEM DE SER VERDADEIRAS

-- ESSE CUIDADO COM O POSICIONAMENTO DAS CONDIÇÕES DIMINUI O TEMPO NECESSÁRIO DE PROCESSAMENTO.

-- =================================================
/* EXERCICIOS */

SELECT COUNT(*) FROM FUNCIONARIOS;

--Traga os funcionarios que trabalhem no departamento de filmes OU no departamento de roupas.
-- 21 | Filmes   53 | Roupas

SELECT idFuncionario, nome, departamento FROM funcionarios 
WHERE departamento = 'Roupas' OR departamento = 'Filmes';

SELECT COUNT(*), departamento FROM funcionarios
GROUP BY departamento
ORDER BY 1;

--O gestor de marketing pediu a lista das funcionarias (AS) = FEMININO que trabalhem no departamento 
--de filmes ou no departamento lar. Ele necessita enviar um email para as colaboradoras
--desses dois setores. OR +  AND *

SELECT idFuncionario, nome, sexo, departamento FROM funcionarios 
WHERE (departamento = 'Lar' OR departamento = 'Filmes') AND sexo = 'Feminino';

SELECT sexo, COUNT(*) FROM funcionarios 
GROUP BY sexo;

--Traga os funcionarios do sexo masculino
--ou os funcionarios que trabalhem no setor Jardim

SELECT idFuncionario, nome, sexo, departamento FROM funcionarios
WHERE sexo = 'Masculino' OR departamento = 'Jardim';